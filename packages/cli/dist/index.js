#! /usr/bin/env node
var l=`
                              .:---::-------------:::::::::::                             
                            :+*++++++++++====================:                            
                            =##*::..........................                              
                           .=+*+                                                          
                            -+++======--.     .-=-                                        
                             .-==========-.   :===.                                       
                                      :#*+=   :===.                                       
                                       ****   :===.                                       
                                       +***   :===.                                       
                                       ++++   :===.                                       
                                       ====   :=--.                                       
                                       ====   :---.                                       
                                       -=--   :---.                                       
                                       ----   .:::.                                       
                                       ----   .:::.                                       
                                       -:::   .:--.                                       
                                       ::::   -++*:                                       
                                       .::-=+*####                                        
                                        .-+*#%%%+                                         
                                           .::.                                           
                                                                                          
                                  trnsprncy coming soon!
`;import{Command as G}from"commander";import z from"chalk-animation";var R=new G().name("hello-world").description("Prints a greeting message").argument("[components...]","the components to add").action(()=>{let e=z.rainbow(l);setTimeout(()=>{e.stop()},5e3)});import{z as o}from"zod";var j=o.object({name:o.string(),dependencies:o.array(o.string()).optional(),devDependencies:o.array(o.string()).optional(),uiDependencies:o.array(o.string()).optional(),registryDependencies:o.array(o.string()).optional(),files:o.array(o.string()),type:o.enum(["components:ui","components:component","components:example","components:library"])}),f=o.array(j),B=j.extend({files:o.array(o.object({name:o.string(),content:o.string()}))}),we=o.array(B);import{HttpsProxyAgent as U}from"https-proxy-agent";import v from"node-fetch";var W="https://raw.githubusercontent.com/trnsprncy/ui/main",_=process.env.COMPONENTS_REGISTRY_URL??"https://trnsprncy.vercel.app",H=process.env.https_proxy?new U(process.env.https_proxy):void 0;async function C(){try{return await(await v(`${_}/registry/index.json`,{agent:H})).json()}catch(e){throw console.log(e),new Error(`Failed to fetch registry from ${_}.`)}}async function J(e){let n=f.parse(await C());e||(console.log("no components selected"),process.exit(1));let t=[];for(let s of e){let r=n.find(a=>a.name===s);if(r)t.push(r);else{console.log(`Component ${s} not found in registry`);continue}}return t}function N(e){return e.map(t=>t.files).flat()}async function $(e){try{let n=[];for(let t of e){let s=`${W}/packages/site/src/registry/alpha/${t}`,r=await v(s);if(!r.ok)throw new Error(`Failed to fetch file '${t}': ${r.statusText}`);let a=await r.text();n.push(a)}return n}catch(n){throw console.error("Error fetching files from GitHub:",n),n}}import u from"chalk";import{Command as L}from"commander";import M from"ora";import K from"prompts";import{z as h}from"zod";var Q={info:e=>u.cyan.underline(e),success:e=>u.greenBright(e),error:e=>u.redBright(e),warning:e=>u.yellowBright(e)},Y=h.object({components:h.array(h.string()).optional(),all:h.boolean()}),O=new L().name("add").description("Prints a greeting message").argument("[components...]","the components to add").option("-a, --all","add all available components",!1).action(async(e,n)=>{let t=Y.parse({components:e,...n}),s=f.parse(await C()),r=t.all?s.map(P=>P.name):t.components;if(!t.components?.length){let{components:P}=await K({type:"multiselect",name:"components",message:"Which components would you like to add?",hint:"Space to select. A to toggle all. Enter to submit.",instructions:!1,choices:s.map(x=>({title:x.name,value:x.name,selected:t.all?!0:t.components?.includes(x.name)}))});r=P}r?.length||(M(Q.warning(`no component was requested!
  exiting.....`)).fail(),process.exit(1));let a=await J(r),g=N(a),D=await $(g);console.log(D),process.exit(0)});import X from"chalk-animation";import y from"chalk";import{Command as Z}from"commander";import p from"fs";import i from"ora";import d from"path";import ee from"prompts";import*as w from"semver";var c={info:e=>y.blueBright(e),success:e=>y.greenBright(e),error:e=>y.redBright(e),warning:e=>y.yellowBright(e)},b="@/components/ui/trnsprncy",ne=`
  this alias will be added to your ${c.success("components.json")} file

    ${c.info(`"aliases": {
        "trnsprncy": "@/components/ui/trnsprncy"
      }`)}
`,m={greet:"Hello, There! Fellow frontend Fanatic!",missingPackages:"This project does not meet the minimum requirements:",outdatedPackages:"This project does not meet the minimum requirements:",noDependencies:`No dependencies found in ${c.success("package.json")} file.`,meetsRequirements:"This project meets the minimum requirements!",writeConfiguration:`Adding configuration alias to ${c.success("components.json")}.${ne}  Proceed?`,configurationWritten:`Configuration written to ${c.success("components.json")}.`,operationAborted:`${c.error("Operation aborted. Configuration not saved.")}`,componentsFileNotChanged:"Components file will not be changed.",shadcnRequired:`shadcn ${c.success("components.json")} file in your project root is required before running this command`},k=d.join(process.cwd(),"components.json");function E(){return p.existsSync(k)?JSON.parse(p.readFileSync(k,"utf-8")):{}}var te=()=>{let e=E();return e?.aliases||(i(m.shadcnRequired).fail(),process.exit(1)),!!e.aliases?.trnsprncy},T=new Z().name("init").description(m.greet).action(()=>{let e=X.rainbow(l);setTimeout(()=>{e.stop()},5e3),te()&&(i(`trnsprncy alias already exists in ${c.success("components.json")}`).fail(),process.exit(1)),ce().then(n=>{n.missingPackages.length||n.outdatedPackages.length?(i(c.error(m.missingPackages)).fail(),console.log("Minimum Requirements:"),n.missingPackages.length>0&&console.log("\u2192 "+n.missingPackages.join(`
`)),n.outdatedPackages.length>0&&n.outdatedPackages.forEach(t=>{console.log(`\u2192 ${t.packageName}: installed ${t.installedVersion}, required ${t.requiredVersion}`)}),process.exit(1)):(i(m.meetsRequirements).succeed(),ae())}).catch(n=>{i(`Error checking required packages: ${n}`).fail()})}),I=e=>(/^\^\d+$/.test(e)&&(e=e+".0.0"),e.replace(/[^0-9.]/g,"")),S={next:"^14.0.1"};async function oe(){let e=d.join(process.cwd(),"package.json"),n=JSON.parse(p.readFileSync(e,"utf-8"));if(!Object.keys(n.dependencies)?.length)return{};for(let t in n.dependencies)n.dependencies[t]=I(n.dependencies[t]);return n.dependencies}var q=d.join(process.cwd(),"tsconfig.json");function se(){return p.existsSync(q)?JSON.parse(p.readFileSync(q,"utf-8")):{}}function re(){try{let n=se().compilerOptions?.paths||{};return!!n["@/*"]&&n["@/*"][0]==="./src/*"}catch(e){return console.error("Error parsing tsconfig:",e),!1}}var A=e=>{p.mkdir(e,{recursive:!0},n=>{n&&console.error("Error creating directory:",n)})},ie={true:()=>A(d.join(process.cwd(),"/src",b.replace("@",""))),false:()=>A(d.join(process.cwd(),b.replace("@","")))};async function ae(){let{confirmation:e}=await ee({type:"toggle",name:"confirmation",message:m.writeConfiguration,initial:!0,active:"yes",inactive:"no"});if(e){p.existsSync(k)||(i(m.shadcnRequired).fail(),process.exit(1));let n=E();n.aliases.trnsprncy=b,p.writeFileSync(k,JSON.stringify(n,null,2));let t=re()?"true":"false",s=ie[t];s(),i(m.configurationWritten).succeed()}else i(m.operationAborted).fail()}async function ce(){let e=await oe();if(!Object.keys(e)?.length)return i(m.noDependencies).fail(),{missingPackages:Object.keys(S),outdatedPackages:[]};let n=[],t=[];i("checking for required packages...").succeed();for(let s in S){let r=e[s];if(!r)n.push(s);else{let a=I(S[s]),g=r;g||n.push(s),!w.satisfies(g,a)&&w.lt(g,a)&&t.push({packageName:s,installedVersion:g,requiredVersion:a})}}return{missingPackages:n,outdatedPackages:t}}import me from"fs";import F from"path";import{fileURLToPath as pe}from"url";var ge=F.dirname(pe(import.meta.url)),V={getContent(){let e=F.resolve(ge,"../","package.json");return JSON.parse(me.readFileSync(e,"utf-8"))},get version(){let e=this.getContent(),{version:n}=e;return n||"0.0.0"}};import{Command as de}from"commander";(async()=>{let e=new de;e.name(">").description("\u26A1\uFE0F transparency/ui.").version(V.version,"-v, --version","display the version number"),e.addCommand(T).addCommand(O).addCommand(R),e.parse()})();
